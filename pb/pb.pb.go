// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AssignIngesterRequest struct {
	Sources              []string `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignIngesterRequest) Reset()         { *m = AssignIngesterRequest{} }
func (m *AssignIngesterRequest) String() string { return proto.CompactTextString(m) }
func (*AssignIngesterRequest) ProtoMessage()    {}
func (*AssignIngesterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{0}
}

func (m *AssignIngesterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignIngesterRequest.Unmarshal(m, b)
}
func (m *AssignIngesterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignIngesterRequest.Marshal(b, m, deterministic)
}
func (m *AssignIngesterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignIngesterRequest.Merge(m, src)
}
func (m *AssignIngesterRequest) XXX_Size() int {
	return xxx_messageInfo_AssignIngesterRequest.Size(m)
}
func (m *AssignIngesterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignIngesterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignIngesterRequest proto.InternalMessageInfo

func (m *AssignIngesterRequest) GetSources() []string {
	if m != nil {
		return m.Sources
	}
	return nil
}

type Destination struct {
	Source               string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination          string   `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Destination) Reset()         { *m = Destination{} }
func (m *Destination) String() string { return proto.CompactTextString(m) }
func (*Destination) ProtoMessage()    {}
func (*Destination) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{1}
}

func (m *Destination) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Destination.Unmarshal(m, b)
}
func (m *Destination) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Destination.Marshal(b, m, deterministic)
}
func (m *Destination) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Destination.Merge(m, src)
}
func (m *Destination) XXX_Size() int {
	return xxx_messageInfo_Destination.Size(m)
}
func (m *Destination) XXX_DiscardUnknown() {
	xxx_messageInfo_Destination.DiscardUnknown(m)
}

var xxx_messageInfo_Destination proto.InternalMessageInfo

func (m *Destination) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Destination) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

type AssignIngesterResponse struct {
	Destinations         []*Destination `protobuf:"bytes,1,rep,name=destinations,proto3" json:"destinations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *AssignIngesterResponse) Reset()         { *m = AssignIngesterResponse{} }
func (m *AssignIngesterResponse) String() string { return proto.CompactTextString(m) }
func (*AssignIngesterResponse) ProtoMessage()    {}
func (*AssignIngesterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{2}
}

func (m *AssignIngesterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignIngesterResponse.Unmarshal(m, b)
}
func (m *AssignIngesterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignIngesterResponse.Marshal(b, m, deterministic)
}
func (m *AssignIngesterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignIngesterResponse.Merge(m, src)
}
func (m *AssignIngesterResponse) XXX_Size() int {
	return xxx_messageInfo_AssignIngesterResponse.Size(m)
}
func (m *AssignIngesterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignIngesterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignIngesterResponse proto.InternalMessageInfo

func (m *AssignIngesterResponse) GetDestinations() []*Destination {
	if m != nil {
		return m.Destinations
	}
	return nil
}

func init() {
	proto.RegisterType((*AssignIngesterRequest)(nil), "pb.AssignIngesterRequest")
	proto.RegisterType((*Destination)(nil), "pb.Destination")
	proto.RegisterType((*AssignIngesterResponse)(nil), "pb.AssignIngesterResponse")
}

func init() { proto.RegisterFile("pb.proto", fileDescriptor_f80abaa17e25ccc8) }

var fileDescriptor_f80abaa17e25ccc8 = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x28, 0x48, 0xd2, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x32, 0xe4, 0x12, 0x75, 0x2c, 0x2e, 0xce,
	0x4c, 0xcf, 0xf3, 0xcc, 0x4b, 0x4f, 0x2d, 0x2e, 0x49, 0x2d, 0x0a, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0x11, 0x92, 0xe0, 0x62, 0x2f, 0xce, 0x2f, 0x2d, 0x4a, 0x4e, 0x2d, 0x96, 0x60, 0x54, 0x60,
	0xd6, 0xe0, 0x0c, 0x82, 0x71, 0x95, 0xdc, 0xb9, 0xb8, 0x5d, 0x52, 0x8b, 0x4b, 0x32, 0xf3, 0x12,
	0x4b, 0x32, 0xf3, 0xf3, 0x84, 0xc4, 0xb8, 0xd8, 0x20, 0x32, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x50, 0x9e, 0x90, 0x02, 0x17, 0x77, 0x0a, 0x42, 0x99, 0x04, 0x13, 0x58, 0x12, 0x59, 0x48,
	0xc9, 0x97, 0x4b, 0x0c, 0xdd, 0xee, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x63, 0x2e, 0x1e,
	0x24, 0x85, 0x10, 0x17, 0x70, 0x1b, 0xf1, 0xeb, 0x15, 0x24, 0xe9, 0x21, 0x59, 0x1d, 0x84, 0xa2,
	0xc8, 0x28, 0x88, 0x8b, 0xd5, 0xb1, 0x28, 0xb3, 0xac, 0x54, 0xc8, 0x93, 0x8b, 0x0f, 0xd5, 0x5c,
	0x21, 0x49, 0x90, 0x4e, 0xac, 0xfe, 0x94, 0x92, 0xc2, 0x26, 0x05, 0x71, 0x86, 0x12, 0x43, 0x12,
	0x1b, 0x38, 0xa4, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x32, 0xf6, 0x9e, 0xf1, 0x35, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArivuClient is the client API for Arivu service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArivuClient interface {
	AssignIngester(ctx context.Context, in *AssignIngesterRequest, opts ...grpc.CallOption) (*AssignIngesterResponse, error)
}

type arivuClient struct {
	cc *grpc.ClientConn
}

func NewArivuClient(cc *grpc.ClientConn) ArivuClient {
	return &arivuClient{cc}
}

func (c *arivuClient) AssignIngester(ctx context.Context, in *AssignIngesterRequest, opts ...grpc.CallOption) (*AssignIngesterResponse, error) {
	out := new(AssignIngesterResponse)
	err := c.cc.Invoke(ctx, "/pb.Arivu/AssignIngester", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArivuServer is the server API for Arivu service.
type ArivuServer interface {
	AssignIngester(context.Context, *AssignIngesterRequest) (*AssignIngesterResponse, error)
}

// UnimplementedArivuServer can be embedded to have forward compatible implementations.
type UnimplementedArivuServer struct {
}

func (*UnimplementedArivuServer) AssignIngester(ctx context.Context, req *AssignIngesterRequest) (*AssignIngesterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignIngester not implemented")
}

func RegisterArivuServer(s *grpc.Server, srv ArivuServer) {
	s.RegisterService(&_Arivu_serviceDesc, srv)
}

func _Arivu_AssignIngester_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignIngesterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArivuServer).AssignIngester(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Arivu/AssignIngester",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArivuServer).AssignIngester(ctx, req.(*AssignIngesterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Arivu_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Arivu",
	HandlerType: (*ArivuServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AssignIngester",
			Handler:    _Arivu_AssignIngester_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}
